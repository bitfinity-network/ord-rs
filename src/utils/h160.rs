use bitcoin_hashes::{hash160, Hash};

pub fn h160sum(bytes: &[u8]) -> Vec<u8> {
    hash160::Hash::hash(bytes).to_byte_array().to_vec()
}

#[cfg(test)]
mod test {

    use hex_literal::hex;

    use super::*;

    #[test]
    fn test_should_compute_h160() {
        assert_eq!(
            hex!("da0b3452b06fe341626ad0949c183fbda5676826"),
            h160sum(&[
                0x04, 0xa1, 0x49, 0xd7, 0x6c, 0x5d, 0xe2, 0x7a, 0x2d, 0xdb, 0xfa, 0xa1, 0x24, 0x6c,
                0x4a, 0xdc, 0xd2, 0xb6, 0xf7, 0xaa, 0x29, 0x54, 0xc2, 0xe2, 0x53, 0x03, 0xf5, 0x51,
                0x54, 0xca, 0xad, 0x91, 0x52, 0xe4, 0xf7, 0xe4, 0xb8, 0x5d, 0xf1, 0x69, 0xc1, 0x8a,
                0x3c, 0x69, 0x7f, 0xbb, 0x2d, 0xc4, 0xec, 0xef, 0x94, 0xac, 0x55, 0xfe, 0x81, 0x64,
                0xcc, 0xf9, 0x82, 0xa1, 0x38, 0x69, 0x1a, 0x55, 0x19,
            ])
            .as_ref()
        );
    }
}
